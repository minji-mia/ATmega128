Archive member included because of file (symbol)

c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_udivmodqi4.o)
                              min.o (__udivmodqi4)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_udivmodhi4.o)
                              min.o (__udivmodhi4)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_exit.o)
                              c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr51/crtm128.o (exit)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_copy_data.o)
                              min.o (__do_copy_data)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_clear_bss.o)
                              min.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800100         0x0000ff00         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
user_signatures  0x00850000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr51/crtm128.o
LOAD min.o
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr51\libc.a
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xfa6
 *(.vectors)
 .vectors       0x00000000       0x8c c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr51/crtm128.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000008c                . = ALIGN (0x2)
                0x0000008c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000008c        0x0 linker stubs
 *(.trampolines*)
                0x0000008c                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000008c                __ctors_start = .
 *(.ctors)
                0x0000008c                __ctors_end = .
                0x0000008c                __dtors_start = .
 *(.dtors)
                0x0000008c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000008c        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr51/crtm128.o
                0x0000008c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000008c        0xc c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr51/crtm128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000098       0x1a c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_copy_data.o)
                0x00000098                __do_copy_data
 .init4         0x000000b2       0x10 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_clear_bss.o)
                0x000000b2                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000c2        0x8 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr51/crtm128.o
 *(.init9)
 *(.text)
 .text          0x000000ca        0x4 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr51/crtm128.o
                0x000000ca                __vector_22
                0x000000ca                __vector_28
                0x000000ca                __vector_32
                0x000000ca                __vector_34
                0x000000ca                __vector_24
                0x000000ca                __vector_12
                0x000000ca                __bad_interrupt
                0x000000ca                __vector_6
                0x000000ca                __vector_31
                0x000000ca                __vector_23
                0x000000ca                __vector_30
                0x000000ca                __vector_25
                0x000000ca                __vector_11
                0x000000ca                __vector_13
                0x000000ca                __vector_17
                0x000000ca                __vector_19
                0x000000ca                __vector_27
                0x000000ca                __vector_5
                0x000000ca                __vector_33
                0x000000ca                __vector_9
                0x000000ca                __vector_21
                0x000000ca                __vector_15
                0x000000ca                __vector_8
                0x000000ca                __vector_26
                0x000000ca                __vector_14
                0x000000ca                __vector_18
                0x000000ca                __vector_20
 .text          0x000000ce      0xd3e min.o
                0x000000ce                __vector_10
                0x000000e2                __vector_29
                0x0000014a                __vector_1
                0x0000018a                __vector_2
                0x0000020a                __vector_3
                0x0000022c                __vector_4
                0x0000024e                __vector_7
                0x00000270                print_FND_2bit
                0x000002a0                mode_0_Basic_Clock
                0x0000032c                mode_1_Stop_Watch
                0x0000058c                mode_2_Alarm
                0x000006ee                mode_3_Countdown
                0x00000a08                mode_4_calculator
                0x00000d20                timer0Countdown
                0x00000d22                timer0Countup
                0x00000da0                __vector_16
 .text          0x00000e0c        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_udivmodqi4.o)
 .text          0x00000e0c        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_udivmodhi4.o)
 .text          0x00000e0c        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_exit.o)
 .text          0x00000e0c        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_copy_data.o)
 .text          0x00000e0c        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_clear_bss.o)
                0x00000e0c                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x00000e0c      0x156 min.o
                0x00000e0c                main
 .text.libgcc.mul
                0x00000f62        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_udivmodqi4.o)
 .text.libgcc.div
                0x00000f62       0x18 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_udivmodqi4.o)
                0x00000f62                __udivmodqi4
 .text.libgcc   0x00000f7a        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_udivmodqi4.o)
 .text.libgcc.prologue
                0x00000f7a        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_udivmodqi4.o)
 .text.libgcc.builtins
                0x00000f7a        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_udivmodqi4.o)
 .text.libgcc.fmul
                0x00000f7a        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_udivmodqi4.o)
 .text.libgcc.mul
                0x00000f7a        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x00000f7a       0x28 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_udivmodhi4.o)
                0x00000f7a                __udivmodhi4
 .text.libgcc   0x00000fa2        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x00000fa2        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x00000fa2        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x00000fa2        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_udivmodhi4.o)
 .text.libgcc.mul
                0x00000fa2        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000fa2        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_exit.o)
 .text.libgcc   0x00000fa2        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000fa2        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000fa2        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000fa2        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000fa2        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000fa2        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_copy_data.o)
 .text.libgcc   0x00000fa2        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000fa2        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000fa2        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000fa2        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000fa2        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000fa2        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000fa2        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000fa2        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000fa2        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000fa2        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_clear_bss.o)
                0x00000fa2                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000fa2        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_exit.o)
                0x00000fa2                _exit
                0x00000fa2                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000fa2        0x4 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_exit.o)
 *(.fini0)
                0x00000fa6                _etext = .

.data           0x00800100       0x14 load address 0x00000fa6
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr51/crtm128.o
 .data          0x00800100       0x14 min.o
                0x00800100                FND_BCD_TBL_H
                0x0080010a                FND_BCD_TBL
 .data          0x00800114        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_udivmodqi4.o)
 .data          0x00800114        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_udivmodhi4.o)
 .data          0x00800114        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_exit.o)
 .data          0x00800114        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_copy_data.o)
 .data          0x00800114        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800114                . = ALIGN (0x2)
                0x00800114                _edata = .
                0x00800114                PROVIDE (__data_end, .)

.bss            0x00800114       0x4d
                0x00800114                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800114        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr51/crtm128.o
 .bss           0x00800114       0x4d min.o
                0x00800114                downcount_al_enable
                0x00800115                end
                0x00800116                cal2
                0x0080011e                cal
                0x00800126                downcount_setting
                0x00800127                stop_downcount
                0x00800128                light
                0x00800129                j
                0x0080012a                i
                0x0080012b                al_msec_l
                0x0080012c                al_msec_u
                0x0080012d                al_sec_l
                0x0080012e                al_sec_u
                0x0080012f                al_min
                0x00800130                FND_CNT
                0x00800131                FND_SEL_CNT
                0x00800132                sw6
                0x00800133                sw3
                0x00800134                sw2
                0x00800135                sw1
                0x00800136                sw0
                0x00800137                al_enable
                0x00800138                mode_state
                0x00800139                mode_sel
                0x0080013a                buff
                0x0080013b                down_ms
                0x0080013c                down_m
                0x0080013d                down_s
                0x0080013e                stop_m
                0x0080013f                stop_s
                0x00800140                stop_ms
                0x00800141                time_m
                0x00800142                time_s
                0x00800143                time_ms
                0x00800144                STOP_FLAG2
                0x00800145                STOP_FLAG
                0x00800146                LAP_INDEX
                0x00800147                LAP_TIME
                0x00800157                FND_DOWN
                0x0080015c                FND_DATA
 .bss           0x00800161        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_udivmodqi4.o)
 .bss           0x00800161        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_udivmodhi4.o)
 .bss           0x00800161        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_exit.o)
 .bss           0x00800161        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_copy_data.o)
 .bss           0x00800161        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr51\libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
                0x00800161                PROVIDE (__bss_end, .)
                0x00000fa6                __data_load_start = LOADADDR (.data)
                0x00000fba                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800161        0x0
                0x00800161                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800161                PROVIDE (__noinit_end, .)
                0x00800161                _end = .
                0x00800161                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x00000000      0x6cc
 *(.stab)
 .stab          0x00000000      0x6cc c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr51/crtm128.o

.stabstr        0x00000000       0x97
 *(.stabstr)
 .stabstr       0x00000000       0x97 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr51/crtm128.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x2f
 *(.comment)
 .comment       0x00000000       0x2f min.o
                                 0x30 (size before relaxing)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x28
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x28 min.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x00000000     0x15d4
 *(.debug_info)
 .debug_info    0x00000000     0x15d4 min.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x234
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x234 min.o

.debug_line     0x00000000      0x50f
 *(.debug_line)
 .debug_line    0x00000000      0x50f min.o

.debug_frame    0x00000000      0x20c
 *(.debug_frame)
 .debug_frame   0x00000000      0x20c min.o

.debug_str      0x00000000      0x324
 *(.debug_str)
 .debug_str     0x00000000      0x324 min.o
                                0x36c (size before relaxing)

.debug_loc      0x00000000     0x1675
 *(.debug_loc)
 .debug_loc     0x00000000     0x1675 min.o

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x00000000       0x18
 *(.debug_ranges)
 .debug_ranges  0x00000000       0x18 min.o

.debug_macro
 *(.debug_macro)
OUTPUT(min.elf elf32-avr)
LOAD linker stubs
